{"version":3,"sources":["App.js","index.js"],"names":["Card","index","color","className","id","style","backgroundColor","App","state","colors","offset","cards","length","handleMouseDown","event","target","parentElement","startX","clientX","modified","shift","move","translate","Math","abs","setState","push","pop","unshift","document","addEventListener","removeEventListener","transform","once","onMouseDown","this","map","item","key","Component","ReactDOM","render","getElementById"],"mappings":"iOAIMA,G,MAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACX,yBAAKC,UAAU,OAAOC,GAAKH,EAAQI,MAAO,CAAEC,gBAAiBJ,IAAWD,KAGrDM,E,YACnB,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,OAAQ,CAAC,eAAgB,QAAS,QAAS,WAAY,WAAY,wBACnEC,OAAQ,GAEV,EAAKF,MAAMG,MAAQ,CAAC,EAAKH,MAAMC,OAAOG,OAAS,EAAG,EAAG,GACrD,EAAKC,gBAAkB,SAACC,GACtB,IAAMC,EAA6B,WAApBD,EAAMC,OAAOX,GACxBU,EAAMC,OAC4B,WAAlCD,EAAMC,OAAOC,cAAcZ,IAAmBU,EAAMC,OAAOC,cAE/D,GAAKD,EAAL,CACA,IAAME,EAASH,EAAMI,QACjBC,GAAW,EACXC,EAAQ,EACNC,EAAO,SAACP,GACZ,IAAMQ,EAAYR,EAAMI,QAAUD,EAASG,EACvCG,KAAKC,IAAIF,GAAa,IACxB,EAAKG,SAAS,CAAEf,OAAQY,IAGrBH,IACHA,GAAW,EACPG,EAAY,GACdF,EAAQ,IACR,EAAKK,UAAS,SAAAjB,GAIZ,OAHAA,EAAMG,MAAMS,QACZZ,EAAMG,MAAMe,KAAKlB,EAAMG,MAAM,GAAK,EAAIH,EAAMC,OAAOG,OAASJ,EAAMG,MAAM,GAAK,EAAI,GACjFH,EAAME,OAASY,EACRd,OAGTY,GAAS,IACT,EAAKK,UAAS,SAAAjB,GAIZ,OAHAA,EAAMG,MAAMgB,MACZnB,EAAMG,MAAMiB,QAAQpB,EAAMG,MAAM,GAAK,GAAK,EAAIH,EAAMG,MAAM,GAAK,EAAIH,EAAMC,OAAOG,OAAS,GACzFJ,EAAME,OAASY,EACRd,QAMfqB,SAASC,iBAAiB,YAAaT,GACvCQ,SAASC,iBAAiB,WAAW,WACnCD,SAASE,oBAAoB,YAAaV,GAC1CN,EAAOV,MAAM2B,UAAY,KACxB,CAAEC,MAAM,MAhDD,E,sEAoDJ,IAAD,OACP,OACE,yBAAK9B,UAAU,OACb,yBAAKC,GAAG,kBACN,yBAAKA,GAAG,SAAS8B,YAAcC,KAAKtB,gBAAkBR,MAAO,CAAC2B,UAAU,cAAD,OAAiBG,KAAK3B,MAAME,OAA5B,SAEnEyB,KAAK3B,MAAMG,MAAMyB,KAAI,SAACC,GAAD,OACnB,kBAAC,EAAD,CAAMpC,MAAQoC,EAAOnC,MAAO,EAAKM,MAAMC,OAAO4B,GAAOC,IAAK,EAAK9B,MAAMC,OAAO4B,e,GA5D3DE,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,U","file":"static/js/main.b1aac02d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nconst Card = ({ index, color }) =>\n  <div className=\"card\" id={ index } style={{ backgroundColor: color }}>{ index }</div>\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      colors: ['antiquewhite', 'azure', 'beige', 'cornsilk', 'lavender', 'lightgoldenrodyellow'],\n      offset: 0,\n    };\n    this.state.cards = [this.state.colors.length - 1, 0, 1];\n    this.handleMouseDown = (event) => {\n      const target = event.target.id === 'slider'\n        ? event.target\n        : event.target.parentElement.id === 'slider' && event.target.parentElement;\n    \n      if (!target) { return }\n      const startX = event.clientX;\n      let modified = false;\n      let shift = 0;\n      const move = (event) => {\n        const translate = event.clientX - startX + shift;\n        if (Math.abs(translate) < 180) {\n          this.setState({ offset: translate });\n          return;\n        }\n        if (!modified) {\n          modified = true;\n          if (translate < 0) {\n            shift = 360;\n            this.setState(state => {\n              state.cards.shift();\n              state.cards.push(state.cards[1] + 1 < state.colors.length ? state.cards[1] + 1 : 0);\n              state.offset = translate;\n              return state;\n            });\n          } else {\n            shift = -360;\n            this.setState(state => {\n              state.cards.pop();\n              state.cards.unshift(state.cards[0] - 1 >= 0 ? state.cards[0] - 1 : state.colors.length - 1);\n              state.offset = translate;\n              return state;\n            });\n          }\n        }\n      }\n    \n      document.addEventListener('mousemove', move);\n      document.addEventListener('mouseup', () => {\n        document.removeEventListener('mousemove', move);\n        target.style.transform = '';\n      }, { once: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"slider-wrapper\">\n          <div id=\"slider\" onMouseDown={ this.handleMouseDown } style={{transform: `translateX(${ this.state.offset }px)`}}>\n            {\n              this.state.cards.map((item) =>\n                <Card index={ item } color={this.state.colors[item]} key={this.state.colors[item]} />\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}